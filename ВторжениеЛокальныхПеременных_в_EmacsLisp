Вторжение Локальных переменных в Emacs Lisp
Оглавление
1. простой пример
2. что может сделать Боб (полные меры)
3. - - -
4. Что может сделать Боб (полумеры)
5. что может сделать Франческа
6. сравнение с вторжением специальных переменных
Эта статья немного длинная. Можно пропустить разделы после - - -части.

Вторжение локальных переменных - это то, что может произойти, когда

1) файл lisp emacs использует defvar, defcustom или defconst для объявления глобальной специальной переменной и

2) другой файл lisp в emacs использует локальную переменную с тем же именем, что и глобальная специальная переменная из другого файла lisp в emacs.

В результате поведение кода предыдущего файла может стать ненадежным, хотя и не всегда. Это как если бы первый файл был захвачен локальной переменной. Другой путь - вторжение специальных переменных .

1. простой пример

Этот пример взят из примера "случайного связывания специальной переменной" в FAQ по Common Lisp от Nikodemus .

Скажем, есть пакет Emacs foo.el, написанный Франческой, объявляет специальную переменную foo-string которая может быть опцией пользователя, управляющая поведением некоторых функций foo.el или это может быть некоторая важная локальная переменная буфера, используемая foo.el. Скажет есть и пакет Emacs bob.el, написанный Бобом, который определяет функцию , которая происходит с использованием foo-string, bar-string, baz-string как его локальные имена переменных. Например

(defun bob-do-something-with-three-strings (foo-string bar-string baz-string)
  (bob-dosomething foo-string)
  (bob-do-other-thing)
  (bob-dosomething bar-string)
  (bob-do-other-thing)
  (bob-dosomething baz-string))

Предположим, что bob-dosomething вызывает какую-то другую функцию из еще одного пакета, которая, в свою очередь, вызывает какую-то другую функцию из еще одного пакета и т.д., в конце концов, вызывается одна из функций foo.el, скажем foo-do-magic, которая полагается на значение специальной переменной foo-string. Этот вызов foo-do-magic не будет делать то, для чего он предназначен. Это потому, что bob-do-something-with-three-strings связывает специальную переменную foo-string случайным образом. Локальная переменная из Боба bob.el вторгается в foo.el Франческу.

2. что может сделать Боб (полные меры)
Что может сделать Боб, чтобы предотвратить для его файла emacs lisp bob.el, случайное вторжение других файлов lisp emacs? Есть много подходов.

Один из подходов состоит в том, чтобы всегда давать зеленые имена (т.е. имена без дефиса в них) всем локальным переменным. Это предотвращает вторжение, потому что по соглашению специальные переменные из других файлов lisp emacs должны иметь желтые имена (то есть имена с дефисом в них).

Есть несколько встроенных специальных переменных с зелеными именами, и вам следует избегать этих имен.

Другой подход состоит в том, чтобы поставить перед каждым именем локальной переменной знаком доллара. Маловероятно, чтобы специальная переменная из какого-либо пакета имела имя, начинающееся со знака доллара (если только имя пакета не начинается со знака доллара).

3. - - -
4. Что может сделать Боб (полумеры)
Возможно, Бобу не нравится ни один из двух подходов. Устраняет ли байтовая компиляция случайное вторжение? Для этого также применимы те же проблемы, что и в соответствующем разделе статьи о применении специальных переменных .

Что если Боб просто проверит список всех пакетов от которых зависит bob.elот, а затем останется в стороне от префиксов, используемых этими пакетами? Он может сделать это, и это поможет уменьшить вероятность вторжения, но это не полностью уменьшит вероятность до нуля, потому что Emacs Lisp является динамическим языком программирования. Например, если один из пакетов foo.el зависит от вызова функции из org-mode, которая запускает ловушку org-export-filter-TYPE-functions, или если пользователь добавляет советы в некоторые из пакетов, то это может привести к вызов функции, отсутствующей в списке зависимостей bob.el.

5. что может сделать Франческа
Может быть, это не должно быть ответственностью Франчески. Тем не менее, есть вещи, которые она может сделать, чтобы уменьшить вероятность вторжения ее посылки. Например, она может выбрать префикс для специальных переменных, который не слишком прост.

Возможно, она могла бы в основном объявить лексические глобальные переменные вместо специальных переменных и убедиться, что у немногих оставшихся специальных переменных есть имя, которое вряд ли будет использоваться в качестве имен локальных переменных другими. У этого подхода есть проблема в том, что лексические глобалы официально не поддерживаются в Emacs. Я не проверял, хорошо ли они работают в качестве локальных переменных буфера или пользовательских опций. Возможно, они работают, но Франческа все еще будет полагаться на недокументированные особенности Emacs. Тот факт, что setq может сделать лексический глобальный объект, не задокументирован, а также не задокументирована функция internal-make-var-non-special, которая используется Emacs во время запуска для создания argv и argi не является специальной.

6. сравнение с вторжением специальных переменных
Вторжение специальных переменных может происходить только тогда, когда речь идет о лексическом ограничении или лексических замыканиях, в отличие от вторжения локальных переменных